pbinom(q=15,size = 20, prob = 0.70)
1-dpois(20,12)
1-dpois(19,12)
1-dpois(20,16)
ppois(q = 20,16)
1-ppois(q = 20,16)
1-ppois(q = 7,lambda =6)
1-ppois(q = 9,lambda =4)
ppois(q = 9,lambda =4)
1-ppois(q = 9,lambda =4)
1-ppois(q = 8,lambda =4)
qchisq(15.78,14)
pchisq(15.78,14)
1- pchisq(15.78,14)
1- pchisq(24,14)
1- pchisq(16,14)
pchisq(31,20)
1-pchisq(q=15.78,df=14)
1-pchisq(q=6,df=14)
1-pchisq(q=24,df=14)
1-pchisq(q=16,df=14)
1-pchisq(q=26,df=14)
pchisq(8.5368,15)
1-pchisq(8.5368,15)
sample(1,3)
sample(1,1:3)
sample(1,1:3)
sample(1,1:3)
sample(1,1:3)
sample(1,1:3)
sample(1,1:3)
sample(2,1:3)
sample(1:3)
sample(1,1:3)
sample(2,1:3)
sample(3,1:3)
sample(3,1:3)
sample(3,1:3)
sample(3,1:3)
sample(3,1:3)
sample(3,1:3)
sample(3,1:3)
sample(3,1:3)
sample(3,1:3)
sample(3,1:3)
sample(3,1:3)
sample(3,1:3)
sample(3,1:3)
sample(3,1:3)
library (shiny)
> runExample("01_hello")
>runExample("01_hello")
runExample("01_hello")
runApp('C:/Users/Gustavo Reyes/Box/Stasiewicz Lab/Gustavo Reyes/MockShinyApp')
runApp('C:/Users/Gustavo Reyes/Box/Stasiewicz Lab/Gustavo Reyes/MockShinyApp')
runApp('C:/Users/Gustavo Reyes/Box/Stasiewicz Lab/Gustavo Reyes/MockShinyApp')
install.packages("tidytuesdayR")
library(GGally)
library(ggplot2)
library(tidyverse)
#Loading the dataset
Dataset1<-read.csv("Draft_Dataset_Weights_CSV.csv")
#Correlation coefficients and simple plots
Data_Correlation<-cor(Dataset1$Change_Weight_Period,Dataset1$Protein_Density,use="complete.obs")
cor(Dataset1$ProteinG,Dataset1$Protein_Density,use="complete.obs")
plot(Dataset1$Change_Weight_Period,Dataset1$Protein_Density)
plot(Dataset1$Change_Weight_Period,Dataset1$Fiber_Density)
#Linear Model to Predict change in Weight based on Fiber Density
Linear_Mod_Protein<-lm(formula = Dataset1$Change_Weight_Period~Dataset1$Protein_Density)
summary(Linear_Mod_Protein)
#base R plot
plot(y= Dataset1$Change_Weight_Period, x = Dataset1$Protein_Density)
abline(a  = Linear_Mod_Protein$coefficients[1],b  = Linear_Mod_Protein$coefficients[2], col = "red")
#ggplot, make it look prety
ggplot(Dataset1, aes(x = Protein_Density, y = Change_Weight_Period)) +
geom_point() +
stat_smooth(method = "lm", col = "red")+
labs(title = paste("Adj R2 = ",signif(summary(Linear_Mod_Protein)$adj.r.squared, 5),
"Intercept =",signif(Linear_Mod_Protein$coef[[1]],5 ),
" Slope =",signif(Linear_Mod_Protein$coef[[2]], 5),
" P =",signif(summary(Linear_Mod_Protein)$coef[2,4], 5)))+
ylab("Change in Weight [lb]")+
xlab("Protein Density")
head(Dataset1)
SurveyData<-read.csv("LogisticReg.csv")
head(SurveyData)
SurveyData<-SurveyData %>%
mutate(W_Change_12 =Weight_12-Initial_Weight, W_Change_Final =  Final_Weight-Initial_Weight, Protein_Green = NA, Fiber_Green =NA)
SurveyData<-func_green(df = SurveyData,
colno = 9, #column where protein density
treshold = 7, #7 g per clcal
newcol = 13) #New column
library(GGally)
library(ggplot2)
library(tidyverse)
#Loading the dataset
Dataset1<-read.csv("Draft_Dataset_Weights_CSV.csv")
#Correlation coefficients and simple plots
Data_Correlation<-cor(Dataset1$Change_Weight_Period,Dataset1$Protein_Density,use="complete.obs")
cor(Dataset1$ProteinG,Dataset1$Protein_Density,use="complete.obs")
plot(Dataset1$Change_Weight_Period,Dataset1$Protein_Density)
plot(Dataset1$Change_Weight_Period,Dataset1$Fiber_Density)
#Linear Model to Predict change in Weight based on Fiber Density
Linear_Mod_Protein<-lm(formula = Dataset1$Change_Weight_Period~Dataset1$Protein_Density)
summary(Linear_Mod_Protein)
#base R plot
plot(y= Dataset1$Change_Weight_Period, x = Dataset1$Protein_Density)
abline(a  = Linear_Mod_Protein$coefficients[1],b  = Linear_Mod_Protein$coefficients[2], col = "red")
#ggplot, make it look prety
ggplot(Dataset1, aes(x = Protein_Density, y = Change_Weight_Period)) +
geom_point() +
stat_smooth(method = "lm", col = "red")+
labs(title = paste("Adj R2 = ",signif(summary(Linear_Mod_Protein)$adj.r.squared, 5),
"Intercept =",signif(Linear_Mod_Protein$coef[[1]],5 ),
" Slope =",signif(Linear_Mod_Protein$coef[[2]], 5),
" P =",signif(summary(Linear_Mod_Protein)$coef[2,4], 5)))+
ylab("Change in Weight [lb]")+
xlab("Protein Density")
#Linear model for multiple predictors
Linear_Mod_PD_Cal<-lm(formula = Dataset1$Change_Weight_Period~Dataset1$Protein_Density+Dataset1$Kcal)
summary(Linear_Mod_PD_Cal)
#Linear model for multiple predictors
Linear_Mod_PD_Cal<-lm(formula = Dataset1$Change_Weight_Period~Dataset1$Protein_Density+Dataset1$Kcal)
summary(Linear_Mod_PD_Cal)
#Pair data to see correlation between weight loss and other predictors.
Clean_data_Pairs <-Dataset1[,c(5:10)]
cor(Clean_data_Pairs, use = "complete.obs")
pairs(Clean_data_Pairs)
ggpairs(Clean_data_Pairs)
#Pair data to see correlation between weight loss and other predictors.
Clean_data_Pairs <-Dataset1[,c(5:10)]
cor(Clean_data_Pairs, use = "complete.obs")
pairs(Clean_data_Pairs)
ggpairs(Clean_data_Pairs)
#Pair data to see correlation between weight loss and other predictors.
Clean_data_Pairs <-Dataset1[,c(5:10)]
cor(Clean_data_Pairs, use = "complete.obs")
pairs(Clean_data_Pairs)
ggpairs(Clean_data_Pairs)
#Pair data to see correlation between weight loss and other predictors.
Clean_data_Pairs <-Dataset1[,c(5:10)]
cor(Clean_data_Pairs, use = "complete.obs")
pairs(Clean_data_Pairs)
ggpairs(Clean_data_Pairs)
#Pair data to see correlation between weight loss and other predictors.
Clean_data_Pairs <-Dataset1[,c(5:10)]
cor(Clean_data_Pairs, use = "complete.obs")
pairs(Clean_data_Pairs)
ggpairs(Clean_data_Pairs)
#Logistic Regression Model:
#Tidy Data for Logistic Regression
Clean_data_Pairs<- Clean_data_Pairs %>%
mutate(Green_Protein = 0) %>%
mutate(Green_Fiber = 0) %>%
mutate(Weighloss_YN= 0)
#Function to change booleans for logistic regression
func_green<-function(df, colno, treshold, newcol){
for (i in 1:nrow(df)){
Response<-df[i,colno]
if (is.na(Response)){
df[i,newcol]<-NA
}else if (Response<treshold){
df[i,newcol]<- 0
} else if (Response>=treshold){
df[i,newcol]<- 1
}
}
return(df)
}
func_WL<-function(df, colno, treshold, newcol){
for (i in 1:nrow(df)){
Response<-df[i,colno]
if (is.na(Response)){
df[i,newcol]<-NA
}else if (Response>=treshold){
df[i,newcol]<- 0
} else if (Response<treshold){
df[i,newcol]<- 1
}
}
return(df)
}
Clean_data_Pairs<-func_green(df = Clean_data_Pairs,
colno = 5, #column where protein density
treshold = 7, #7 g per clcal
newcol = 7) #New column
Clean_data_Pairs<-func_green(df = Clean_data_Pairs,
colno = 6, #column where protein density
treshold = 1.8, #7 g per clcal
newcol = 8) #New column
Clean_data_Pairs<-func_WL(df = Clean_data_Pairs,
colno = 1, #column where protein density
treshold = 0, #7 g per clcal
newcol = 9) #New column
#Logisitic Regression for Weighloss yes or not.
gl <- glm(Weighloss_YN~Protein_Density  , family = binomial(link="logit"), data=Clean_data_Pairs)
AIC(gl)
summary(gl)
SurveyData<-read.csv("LogisticReg.csv")
head(SurveyData)
SurveyData<-SurveyData %>%
mutate(W_Change_12 =Weight_12-Initial_Weight, W_Change_Final =  Final_Weight-Initial_Weight, Protein_Green = NA, Fiber_Green =NA)
SurveyData<-func_green(df = SurveyData,
colno = 9, #column where protein density
treshold = 7, #7 g per clcal
newcol = 13) #New column
SurveyData<-func_green(df = SurveyData,
colno = 10,#column where protein density
treshold = 1.8, #7 g per clcal
newcol = 14) #New column
xtabs(~Protein_Green+Protein_12mon, data= SurveyData)
#Cross tabulation
SurveyData %>%
ggplot(aes(x = factor(Protein_12mon))) +
geom_bar() +
facet_wrap(~Protein_Green)
xtabs(~Fiber_Green+Fiber_12mon, data= SurveyData)
#Cross Tabulation.
SurveyData %>%
ggplot(aes(x = factor(Fiber_12mon))) +
geom_bar() +
facet_wrap(~Fiber_Green)
SurveyData$Fiber_12mon<-as.factor(SurveyData$Fiber_12mon)
SurveyData$Protein_12mon<-as.factor(SurveyData$Protein_12mon)
glP <- glm(Protein_Green~Protein_12mon, family = binomial(link="logit"), data=SurveyData)
AIC(glP)
summary(glP)
#every unit increase in predictor will increase the log odds of being green by 17.18
exp(glP$coefficients)
#The interpretation of rank is different from others, going to rank-2 college from rank-1 college will decrease the log odds of getting admit by -0.67. Going from rank-2 to rank-3 will decrease it by -1.340.
install.packages("pwr")
library(GGally)
library(ggplot2)
library(tidyverse)
library(pwr)
install.packages(WebPower)
install.packages("WebPower")
library(WebPower)
#Based on correlation between change in weight and protein Density:
wp.correlation(n=17, r=-.324)
#Based on correlation between change in weight and protein Density:
wp.correlation(n=17, r=-.324)
Power_size = wp.correlation(n=seq(50,100,10),r=-.324, alternative = "two.sided")
plot(Power_size,type='b')
#Based on correlation between change in weight and protein Density:
wp.correlation(n=17, r=-.324)
Power_size = wp.correlation(n=seq(50,100,10),r=-.324, alternative = "two.sided")
summary(Power_size)
plot(Power_size,type='b')
#Based on correlation between change in weight and protein Density:
wp.correlation(n=17, r=-.324)
Power_size = wp.correlation(n=seq(50,100,10),r=-.324, alternative = "two.sided")
Power_size
plot(Power_size,type='b')
#Logistic Regression Model:
#Tidy Data for Logistic Regression
Clean_data_Pairs<- Clean_data_Pairs %>%
mutate(Green_Protein = 0) %>%
mutate(Green_Fiber = 0) %>%
mutate(Weighloss_YN= 0)
#Function to change booleans for logistic regression
func_green<-function(df, colno, treshold, newcol){
for (i in 1:nrow(df)){
Response<-df[i,colno]
if (is.na(Response)){
df[i,newcol]<-NA
}else if (Response<treshold){
df[i,newcol]<- 0
} else if (Response>=treshold){
df[i,newcol]<- 1
}
}
return(df)
}
func_WL<-function(df, colno, treshold, newcol){
for (i in 1:nrow(df)){
Response<-df[i,colno]
if (is.na(Response)){
df[i,newcol]<-NA
}else if (Response>=treshold){
df[i,newcol]<- 0
} else if (Response<treshold){
df[i,newcol]<- 1
}
}
return(df)
}
Clean_data_Pairs<-func_green(df = Clean_data_Pairs,
colno = 5, #column where protein density
treshold = 7, #7 g per clcal
newcol = 7) #New column
Clean_data_Pairs<-func_green(df = Clean_data_Pairs,
colno = 6, #column where protein density
treshold = 1.8, #7 g per clcal
newcol = 8) #New column
Clean_data_Pairs<-func_WL(df = Clean_data_Pairs,
colno = 1, #column where protein density
treshold = 0, #7 g per clcal
newcol = 9) #New column
#Logisitic Regression for Weighloss yes or not.
gl <- glm(Weighloss_YN~Protein_Density  , family = binomial(link="logit"), data=Clean_data_Pairs)
AIC(gl)
summary(gl)
View(Clean_data_Pairs)
gl_FP<-glm(Weighloss_YN~Protein_Density+Fiber_Density  , family = binomial(link="logit"), data=Clean_data_Pairs)
AIC(gl_FP)
summary(gl_FP)
View(Clean_data_Pairs)
gl_FPK<-glm(Weighloss_YN~Protein_Density+Fiber_Density+Kcal  , family = binomial(link="logit"), data=Clean_data_Pairs)
AIC(gl_FPK)
summary(gl_FPK)
gl_K<-glm(Weighloss_YN~Kcal  , family = binomial(link="logit"), data=Clean_data_Pairs)
AIC(gl_K)
summary(gl_K)
exp(coef(gl_k))
exp(coef(gl_K))
gl_K<-glm(Weighloss_YN~Kcal  , family = binomial(link="logit"), data=Clean_data_Pairs)
AIC(gl_K)
summary(gl_K)
data<-read.csv("3d-df-11-13.csv")
library("plotly")
library("tidyverse")
library("ggplot2")
Summarizeddata<-data %>%
group_by(#%%) %>%
summarise(meanpa = mean(PH_CFU_PerA)) %>%
mutate(meanpr = 1-meanpa)
P1 <-Summarizeddata[1:25,]
library(reshape2)
Matrix<-acast(P1, Grabs~SampleMass, value.var="meanpr")
fig1 <- plot_ly(
x = c(60,120,300,600,1200),
y = c(1,30,60,120,300),
z = Matrix,
type = "contour"
) %>%
layout(yaxis = list(title = 'Number of grabs/ composite sample'),xaxis = list(title = 'Composite Sample Mass (g)'), title =list(text= "100 lb Cluster (0.1%) | Total CFU in Cluster: 4,540" )) %>%
colorbar(title = "% CFU Rejected (POWER)")
fig1
P1 <-Summarizeddata[1:25,]
library(reshape2)
Matrix<-acast(P1, Grabs~SampleMass, value.var="meanpr")
fig1 <- plot_ly(
x = c(60,120,300,600,1200),
y = c(1,30,60,120,300),
z = Matrix,
type = "contour"
) %>%
layout(yaxis = list(title = 'Number of grabs/ composite sample'),xaxis = list(title = 'Composite Sample Mass (g)'), title =list(text= "100 lb Cluster (0.1%) | Total CFU in Cluster: 4,540" )) %>%
colorbar(title = "% CFU Rejected (POWER)")
fig1
library("plotly")
library("tidyverse")
library("ggplot2")
Summarizeddata<-data %>%
group_by(#%%) %>%
summarise(meanpa = mean(PH_CFU_PerA)) %>%
mutate(meanpr = 1-meanpa)
data<-read.csv("3d-df-11-13.csv")
setwd("~/GitHubFiles/CPS-Farm-to-Facility/Model/R Analysis")
data<-read.csv("3d-df-11-13.csv")
View(data)
Summarizeddata<-data %>%
group_by(SampleMass,Grabs,ContLevel,Clusters) %>%
summarise(meanpa = mean(PH_CFU_PerA)) %>%
mutate(meanpr = 1-meanpa)
P1 <-Summarizeddata[1:25,]
library(reshape2)
Matrix<-acast(P1, Grabs~SampleMass, value.var="meanpr")
fig1 <- plot_ly(
x = c(60,120,300,600,1200),
y = c(1,30,60,120,300),
z = Matrix,
type = "contour"
) %>%
layout(yaxis = list(title = 'Number of grabs/ composite sample'),xaxis = list(title = 'Composite Sample Mass (g)'), title =list(text= "100 lb Cluster (0.1%) | Total CFU in Cluster: 4,540" )) %>%
colorbar(title = "% CFU Rejected (POWER)")
fig1
View(Summarizeddata)
Summarizeddata<-data %>%
group_by(ContLevel,Clusters,SampleMass,Grabs,) %>%
summarise(meanpa = mean(PH_CFU_PerA)) %>%
mutate(meanpr = 1-meanpa)
P1 <-Summarizeddata[1:25,]
library(reshape2)
Matrix<-acast(P1, Grabs~SampleMass, value.var="meanpr")
fig1 <- plot_ly(
x = c(60,120,300,600,1200),
y = c(1,30,60,120,300),
z = Matrix,
type = "contour"
) %>%
layout(yaxis = list(title = 'Number of grabs/ composite sample'),xaxis = list(title = 'Composite Sample Mass (g)'), title =list(text= "100 lb Cluster (0.1%) | Total CFU in Cluster: 4,540" )) %>%
colorbar(title = "% CFU Rejected (POWER)")
fig1
P1 <-Summarizeddata[1:25,]
library(reshape2)
Matrix<-acast(P1, Grabs~SampleMass, value.var="meanpr")
fig1 <- plot_ly(
x = c(60,120,300,600,1200),
y = c(1,30,60,120,300),
z = Matrix,
type = "contour",
contours = list(showlabels = TRUE)
) %>%
layout(yaxis = list(title = 'Number of grabs/ composite sample'),xaxis = list(title = 'Composite Sample Mass (g)'), title =list(text= "100 lb Cluster (0.1%) | Total CFU in Cluster: 4,540" )) %>%
colorbar(title = "% CFU Rejected (POWER)")
fig1
P1 <-Summarizeddata[1:25,]
library(reshape2)
Matrix<-acast(P1, Grabs~SampleMass, value.var="meanpr")
fig1 <- plot_ly(
x = c(60,120,300,600,1200),
y = c(1,30,60,120,300),
z = Matrix,
type = "contour",
contours = list(showlabels = TRUE, color= "black")
) %>%
layout(yaxis = list(title = 'Number of grabs/ composite sample'),xaxis = list(title = 'Composite Sample Mass (g)'), title =list(text= "100 lb Cluster (0.1%) | Total CFU in Cluster: 4,540" )) %>%
colorbar(title = "% CFU Rejected (POWER)")
fig1
P1 <-Summarizeddata[1:25,]
library(reshape2)
Matrix<-acast(P1, Grabs~SampleMass, value.var="meanpr")
fig1 <- plot_ly(
x = c(60,120,300,600,1200),
y = c(1,30,60,120,300),
z = Matrix,
type = "contour",
contours = list(showlabels = TRUE, fontcolor= "black")
) %>%
layout(yaxis = list(title = 'Number of grabs/ composite sample'),xaxis = list(title = 'Composite Sample Mass (g)'), title =list(text= "100 lb Cluster (0.1%) | Total CFU in Cluster: 4,540" )) %>%
colorbar(title = "% CFU Rejected (POWER)")
fig1
P1 <-Summarizeddata[1:25,]
library(reshape2)
Matrix<-acast(P1, Grabs~SampleMass, value.var="meanpr")
fig1 <- plot_ly(
x = c(60,120,300,600,1200),
y = c(1,30,60,120,300),
z = Matrix,
type = "contour",
contours = list(showlabels = TRUE, labelfont = list(size = fs, color = 'white'))
) %>%
layout(yaxis = list(title = 'Number of grabs/ composite sample'),xaxis = list(title = 'Composite Sample Mass (g)'), title =list(text= "100 lb Cluster (0.1%) | Total CFU in Cluster: 4,540" )) %>%
colorbar(title = "% CFU Rejected (POWER)")
fig1
P1 <-Summarizeddata[1:25,]
library(reshape2)
Matrix<-acast(P1, Grabs~SampleMass, value.var="meanpr")
fig1 <- plot_ly(
x = c(60,120,300,600,1200),
y = c(1,30,60,120,300),
z = Matrix,
type = "contour",
contours = list(showlabels = TRUE, labelfont = list( color = 'white'))
) %>%
layout(yaxis = list(title = 'Number of grabs/ composite sample'),xaxis = list(title = 'Composite Sample Mass (g)'), title =list(text= "100 lb Cluster (0.1%) | Total CFU in Cluster: 4,540" )) %>%
colorbar(title = "% CFU Rejected (POWER)")
fig1
P1 <-Summarizeddata[1:25,]
library(reshape2)
Matrix<-acast(P1, Grabs~SampleMass, value.var="meanpr")
fig1 <- plot_ly(
x = c(60,120,300,600,1200),
y = c(1,30,60,120,300),
z = Matrix,
type = "contour",
contours = list(showlabels = TRUE, labelfont = list( color = 'black'))
) %>%
layout(yaxis = list(title = 'Number of grabs/ composite sample'),xaxis = list(title = 'Composite Sample Mass (g)'), title =list(text= "100 lb Cluster (0.1%) | Total CFU in Cluster: 4,540" )) %>%
colorbar(title = "% CFU Rejected (POWER)")
fig1
P1 <-Summarizeddata[1:25,]
library(reshape2)
Matrix<-acast(P1, Grabs~SampleMass, value.var="meanpr")
fig1 <- plot_ly(
x = c(60,120,300,600,1200),
y = c(1,30,60,120,300),
z = Matrix,
type = "contour",
contours = list(showlabels = TRUE, labelfont = list( color = 'black', size = 12))
) %>%
layout(yaxis = list(title = 'Number of grabs/ composite sample'),xaxis = list(title = 'Composite Sample Mass (g)'), title =list(text= "100 lb Cluster (0.1%) | Total CFU in Cluster: 4,540" )) %>%
colorbar(title = "% CFU Rejected (POWER)")
fig1
P1 <-Summarizeddata[1:25,]
library(reshape2)
Matrix<-acast(P1, Grabs~SampleMass, value.var="meanpr")
fig1 <- plot_ly(
x = c(60,120,300,600,1200),
y = c(1,30,60,120,300),
z = Matrix,
type = "contour",
contours = list(showlabels = TRUE, labelfont = list( color = 'black', size = 20))
) %>%
layout(yaxis = list(title = 'Number of grabs/ composite sample'),xaxis = list(title = 'Composite Sample Mass (g)'), title =list(text= "100 lb Cluster (0.1%) | Total CFU in Cluster: 4,540" )) %>%
colorbar(title = "% CFU Rejected (POWER)")
fig1
P1 <-Summarizeddata[1:25,]
library(reshape2)
Matrix<-acast(P1, Grabs~SampleMass, value.var="meanpr")
fig1 <- plot_ly(
x = c(60,120,300,600,1200),
y = c(1,30,60,120,300),
z = Matrix,
type = "contour",
contours = list(showlabels = TRUE, labelfont = list( color = 'black', size = 16))
) %>%
layout(yaxis = list(title = 'Number of grabs/ composite sample'),xaxis = list(title = 'Composite Sample Mass (g)'), title =list(text= "100 lb Cluster (0.1%) | Total CFU in Cluster: 4,540" )) %>%
colorbar(title = "% CFU Rejected (POWER)")
fig1
